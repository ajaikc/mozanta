{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/tutorial.component.js","components/tutorials-list.component.js","components/add-tutorial.component.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","title","Tutorial","props","onChangeTitle","bind","onChangeDescription","getTutorial","updatePublished","updateTutorial","deleteTutorial","state","currentTutorial","description","published","message","this","match","params","e","target","value","setState","prevState","TutorialDataService","then","response","console","log","catch","status","update","history","push","className","htmlFor","type","onChange","onClick","href","icon","faPlusCircle","Component","TutorialsList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByTitle","map","key","faTrash","faEdit","to","AddTutorial","saveTutorial","newTutorial","submitted","size","faPlus","required","name","placeholder","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.b699d45f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass TutorialDataService {\n  getAll() {\n    return http.get(\"/tutorials\");\n  }\n\n  get(id) {\n    return http.get(`/tutorials/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/tutorials\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/tutorials/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/tutorials/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/tutorials`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/tutorials?title=${title}`);\n  }\n}\n\nexport default new TutorialDataService();","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faPlus, faPlusCircle, faTrash} from \"@fortawesome/free-solid-svg-icons\"\n\n\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentTutorial: {\n          ...prevState.currentTutorial,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        description: description\n      }\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentTutorial: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      published: status\n    };\n\n    TutorialDataService.update(this.state.currentTutorial.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateTutorial() {\n    TutorialDataService.update(\n      this.state.currentTutorial.id,\n      this.state.currentTutorial\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The tutorial was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteTutorial() {    \n    TutorialDataService.delete(this.state.currentTutorial.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/add')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentTutorial } = this.state;\n\n    return (\n      <div>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n       \n          <h4>Tasks</h4> \n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Task name</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentTutorial.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n             \n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentTutorial.published ? \"Completed\" : \"Created\"}\n              </div>\n            </form>\n\n            {currentTutorial.published ? (\n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              \n              \n              <button\n                className=\"badge badge-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n\n              \n\n            )}\n\n            <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>haiiii</p>\n          </div>\n          \n        )}\n        <div className=\"new\">\n   <a  href=\"/#/add\"><FontAwesomeIcon icon={faPlusCircle}></FontAwesomeIcon></a><h5>Add a new task</h5>\n   </div>\n      </div>\n      \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { Link } from \"react-router-dom\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faTrash,faEdit,faPlusCircle} from \"@fortawesome/free-solid-svg-icons\"\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveTutorials();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveTutorials() {\n    TutorialDataService.getAll()\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveTutorials();\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveTutorial(tutorial, index) {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index\n    });\n  }\n\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchTitle() {\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n\n    TutorialDataService.findByTitle(this.state.searchTitle)\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, tutorials, currentTutorial, currentIndex } = this.state;\n\n    return (\n      <div className=\"list row\">\n        \n        <div className=\"col-md-6\">\n          \n          <h4>Task List</h4>\n\n          <ul className=\"list-group\">\n          \n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                \n                <li\n                  className={\n                    \"list-group \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                 <input type=\"checkbox\"/> {tutorial.title}\n                  \n                </li>\n              ))}\n          </ul>\n\n            <FontAwesomeIcon icon={faTrash} onClick={this.removeAllTutorials}></FontAwesomeIcon> Remove All\n            <br/>  <br/>\n            <div className=\"new\">\n   <a  href=\"/#/add\"><h6> new task</h6></a>\n   </div>\n            \n             </div>\n        <div className=\"col-md-6 \">\n          {currentTutorial ? (\n            <div>\n              <h4>Added Tutorial</h4>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentTutorial.title}\n              </div>\n              \n              <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n\n\n                <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\n\n              <Link\n                to={\"/tutorials/\" + currentTutorial.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n             \n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faPlus, faPlusCircle} from \"@fortawesome/free-solid-svg-icons\"\nimport Tutorial from \"./tutorial.component\";\nimport TutorialsList from \"./tutorials-list.component\";\n\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveTutorial = this.saveTutorial.bind(this);\n    this.newTutorial = this.newTutorial.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\", \n      published: false,\n\n      submitted: false\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveTutorial() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n\n    TutorialDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newTutorial() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You Added successfully!</h4>\n            <h5>if more data click Add button</h5>\n            <FontAwesomeIcon icon={faPlusCircle} size=\"2rem\" onClick={this.newTutorial}></FontAwesomeIcon>\n        \n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n            <h4>Tasks</h4>\n              <div className=\"taskInput\">\n            \n               \n              <FontAwesomeIcon icon={faPlus}  onClick={this.saveTutorial} ></FontAwesomeIcon>\n            \n              <input\n                type=\"text\"\n                className=\"inputField\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n                placeholder=\"Add a Task\"\n              />\n            </div>\n            </div>\n            \n              <TutorialsList/>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport Tutorial from \"./components/tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        \n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}